{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"RNN_Multistep","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMJT7+PVXmQzx9M+oijnE71"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Imports"],"metadata":{"id":"NsancM49Ftl3"}},{"cell_type":"markdown","source":["Import libraries"],"metadata":{"id":"4UaW2lr9F0JA"}},{"cell_type":"code","source":["import pandas as pd\n","import math\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import random\n","import os\n","import pickle\n","\n","# Sklearn imports\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.metrics import *\n","from sklearn.model_selection import KFold, train_test_split\n","\n","\n","# Tensorflow imports\n","from tensorflow import keras\n","from tensorflow.keras.layers import Dense, Dropout, SimpleRNN\n","from tensorflow.keras.callbacks import History, EarlyStopping\n","from tensorflow.keras.optimizers import Adam"],"metadata":{"id":"0zfNK_NFF2q_","executionInfo":{"status":"ok","timestamp":1652302127880,"user_tz":-60,"elapsed":4300,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["import google drive"],"metadata":{"id":"dJe04xdDFwbf"}},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tE9tLzo7FkLF","executionInfo":{"status":"ok","timestamp":1652302129351,"user_tz":-60,"elapsed":1482,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"outputId":"356da77b-7acb-4ef1-9b92-b270f82b7e54"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","\n","drive_root=\"/content/drive\"\n","drive.mount(drive_root)"]},{"cell_type":"markdown","source":["Import data"],"metadata":{"id":"STD6dnnIF--e"}},{"cell_type":"code","source":["data_root = \"/content/drive/MyDrive/Dissertation/Data/\"\n","pickle_path = data_root + \"master_list.pkl\"\n","data = pd.read_csv(data_root + \"processed_psoriasis_data.csv\", header=0, index_col=0)"],"metadata":{"id":"wXnK4ceuF-mD","executionInfo":{"status":"ok","timestamp":1652302129353,"user_tz":-60,"elapsed":15,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# Pre-process data"],"metadata":{"id":"q1HX-wMnGCxW"}},{"cell_type":"code","source":["with open(pickle_path, \"rb\") as fs:\n","  master_list = pickle.load(fs)\n","\n","# Create variables of each dict element\n","globals().update(master_list)\n","\n","# Show imported columns\n","for i in master_list.keys():\n","  print(i)\n"],"metadata":{"id":"w42bzlJJSV1g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652302129354,"user_tz":-60,"elapsed":15,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"outputId":"2eb0f2b8-d926-4cf9-a1e7-3bdc1079d1fb"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["continuous_cols\n","categorical_cols\n","pasi_cols\n","cont_feature_cols\n","cat_feature_cols\n","cont_label_cols\n","cat_label_cols\n","curated_feature_cols\n","ohc_curated_feat_cols\n","ohc_feature_cols\n","ohc_label_cols\n"]}]},{"cell_type":"markdown","source":["# Preprocessing "],"metadata":{"id":"dD6wjmoBS3XH"}},{"cell_type":"markdown","source":["Replace missing vals with 0"],"metadata":{"id":"nQnuAorjao0u"}},{"cell_type":"code","source":["data[pasi_cols] = data[pasi_cols].replace(math.nan, 0)"],"metadata":{"id":"rY8P964Gao7u","executionInfo":{"status":"ok","timestamp":1652302129354,"user_tz":-60,"elapsed":10,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["Get input columns"],"metadata":{"id":"a4vuVSkrgCer"}},{"cell_type":"code","source":["curated = False\n","\n","if curated:\n","  input_cols = pasi_cols[:3] + ohc_curated_feat_cols\n","else:\n","  input_cols = pasi_cols[:3] + ohc_feature_cols + cont_feature_cols"],"metadata":{"id":"CB77fY1Y-TtK","executionInfo":{"status":"ok","timestamp":1652302129355,"user_tz":-60,"elapsed":9,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["def get_pasi_input(week):\n","  assert week > 2\n","  week_str = \"PASI.END.WEEK.\" + str(week)\n","  data_week = data[pasi_cols[:week+1]].copy()\n","  \n","  data_nonan = data_week[~data[week_str].isna()]\n","\n","  input = data_nonan[pasi_cols[:week]]\n","  output = data_nonan[pasi_cols[week]]\n","  \n","  return (input, output)\n","  "],"metadata":{"id":"QsbKpso9TVpL","executionInfo":{"status":"ok","timestamp":1652302129598,"user_tz":-60,"elapsed":11,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["x_unshaped = []\n","x = []\n","y = []\n","\n","for week in range(3, len(pasi_cols)):\n","  x_week, y_week = get_pasi_input(week)\n","  \n","  x_week = x_week.to_numpy().reshape(\n","      (x_week.shape[0], x_week.shape[1], 1)\n","      )\n","  \n","  x.append(x_week)\n","  y.append(y_week.to_numpy())\n","  "],"metadata":{"id":"u7tLfANFS15T","executionInfo":{"status":"ok","timestamp":1652302129598,"user_tz":-60,"elapsed":10,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test = [],[],[],[]\n","\n","for x_iter, y_iter in zip(x, y):\n","  x_train_i, x_test_i, y_train_i, y_test_i = train_test_split(x_iter, y_iter)\n","  x_train.append(x_train_i), x_test.append(x_test_i)\n","  y_train.append(y_train_i), y_test.append(y_test_i)\n"],"metadata":{"id":"KpqDN6OzS-WK","executionInfo":{"status":"ok","timestamp":1652302129599,"user_tz":-60,"elapsed":10,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["plot_vals = []\n","for x_i in x:\n","  plot_vals.append(len(x_i))\n","\n","plt.bar(range(4, 12), plot_vals)\n","plt.xlabel(\"Session\")\n","plt.ylabel(\"Count\")\n","\n","print(\"SESSION, COUNT\")\n","for i, val in enumerate(plot_vals):\n","  print(i+4, val)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":438},"id":"vMeMrxk32YOH","executionInfo":{"status":"ok","timestamp":1652302130280,"user_tz":-60,"elapsed":689,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"outputId":"8f22239a-ae32-4111-9ab6-a19b1149c1d2"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["SESSION, COUNT\n","4 96\n","5 96\n","6 96\n","7 96\n","8 96\n","9 96\n","10 96\n","11 96\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Models"],"metadata":{"id":"OUvgs1c9QvyN"}},{"cell_type":"code","source":["rnn_models = []\n","\n","for x_iter in x:\n","  rnn_models.append(keras.models.Sequential([\n","        SimpleRNN(70, input_shape=(x_iter.shape[1], 1)),\n","        Dense(1, activation='sigmoid')                                 \n","  ], name=f\"rnn_input_{x_iter.shape[1]}\"))\n"],"metadata":{"id":"icEJDBOKYF_a","executionInfo":{"status":"ok","timestamp":1652302132544,"user_tz":-60,"elapsed":2280,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["for rnn, x_iter in zip(rnn_models, x):\n","  rnn.build((None, x_iter.shape[1], 1))\n","\n","  rnn.compile(loss='mean_squared_error', \n","              optimizer=Adam(lr=1e-5),\n","              metrics=['mean_squared_error', \"mean_absolute_error\"])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QNUxVrViRSq-","executionInfo":{"status":"ok","timestamp":1652302132545,"user_tz":-60,"elapsed":31,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"outputId":"26d81ad6-6634-4121-c424-84ff0f2fe9fd"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  super(Adam, self).__init__(name, **kwargs)\n"]}]},{"cell_type":"code","source":["rnn_history = []\n","for i in range(0, len(x)):\n","  rnn_history.append(History())"],"metadata":{"id":"H_qUO3z5Yd0S","executionInfo":{"status":"ok","timestamp":1652302132546,"user_tz":-60,"elapsed":18,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["EPOCHS = 150\n","BATCH_SIZE = 1"],"metadata":{"id":"IMQEvsFtVsCL","executionInfo":{"status":"ok","timestamp":1652302132547,"user_tz":-60,"elapsed":16,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["for model, x_iter, y_iter, hist_iter in zip(rnn_models, x_train, y_train, rnn_history):\n","  model.fit(\n","      x_iter,\n","      y_iter,\n","      epochs = EPOCHS,\n","      batch_size = BATCH_SIZE,\n","      validation_split=0.1,\n","      callbacks=[hist_iter]\n","  )"],"metadata":{"id":"2r8AEku_R1J6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651931937561,"user_tz":-60,"elapsed":31046,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"outputId":"2d82b321-eff2-436c-9278-82359900fe52"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/150\n","64/64 [==============================] - 2s 11ms/step - loss: 0.1531 - mean_squared_error: 0.1531 - mean_absolute_error: 0.3827 - val_loss: 0.1377 - val_mean_squared_error: 0.1377 - val_mean_absolute_error: 0.3591\n","Epoch 2/150\n","64/64 [==============================] - 0s 5ms/step - loss: 0.1444 - mean_squared_error: 0.1444 - mean_absolute_error: 0.3707 - val_loss: 0.1305 - val_mean_squared_error: 0.1305 - val_mean_absolute_error: 0.3482\n","Epoch 3/150\n","64/64 [==============================] - 0s 5ms/step - loss: 0.1361 - mean_squared_error: 0.1361 - mean_absolute_error: 0.3589 - val_loss: 0.1235 - val_mean_squared_error: 0.1235 - val_mean_absolute_error: 0.3371\n","Epoch 4/150\n","64/64 [==============================] - 0s 4ms/step - loss: 0.1281 - mean_squared_error: 0.1281 - mean_absolute_error: 0.3470 - val_loss: 0.1168 - val_mean_squared_error: 0.1168 - val_mean_absolute_error: 0.3263\n","Epoch 5/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.1204 - mean_squared_error: 0.1204 - mean_absolute_error: 0.3351 - val_loss: 0.1104 - val_mean_squared_error: 0.1104 - val_mean_absolute_error: 0.3153\n","Epoch 6/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.1131 - mean_squared_error: 0.1131 - mean_absolute_error: 0.3233 - val_loss: 0.1042 - val_mean_squared_error: 0.1042 - val_mean_absolute_error: 0.3045\n","Epoch 7/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.1061 - mean_squared_error: 0.1061 - mean_absolute_error: 0.3116 - val_loss: 0.0984 - val_mean_squared_error: 0.0984 - val_mean_absolute_error: 0.2938\n","Epoch 8/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0994 - mean_squared_error: 0.0994 - mean_absolute_error: 0.2996 - val_loss: 0.0927 - val_mean_squared_error: 0.0927 - val_mean_absolute_error: 0.2828\n","Epoch 9/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0931 - mean_squared_error: 0.0931 - mean_absolute_error: 0.2882 - val_loss: 0.0872 - val_mean_squared_error: 0.0872 - val_mean_absolute_error: 0.2719\n","Epoch 10/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0870 - mean_squared_error: 0.0870 - mean_absolute_error: 0.2767 - val_loss: 0.0821 - val_mean_squared_error: 0.0821 - val_mean_absolute_error: 0.2611\n","Epoch 11/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0813 - mean_squared_error: 0.0813 - mean_absolute_error: 0.2656 - val_loss: 0.0772 - val_mean_squared_error: 0.0772 - val_mean_absolute_error: 0.2503\n","Epoch 12/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0759 - mean_squared_error: 0.0759 - mean_absolute_error: 0.2548 - val_loss: 0.0726 - val_mean_squared_error: 0.0726 - val_mean_absolute_error: 0.2396\n","Epoch 13/150\n","64/64 [==============================] - 0s 2ms/step - loss: 0.0708 - mean_squared_error: 0.0708 - mean_absolute_error: 0.2441 - val_loss: 0.0681 - val_mean_squared_error: 0.0681 - val_mean_absolute_error: 0.2288\n","Epoch 14/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0660 - mean_squared_error: 0.0660 - mean_absolute_error: 0.2344 - val_loss: 0.0639 - val_mean_squared_error: 0.0639 - val_mean_absolute_error: 0.2181\n","Epoch 15/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0615 - mean_squared_error: 0.0615 - mean_absolute_error: 0.2250 - val_loss: 0.0602 - val_mean_squared_error: 0.0602 - val_mean_absolute_error: 0.2088\n","Epoch 16/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0573 - mean_squared_error: 0.0573 - mean_absolute_error: 0.2160 - val_loss: 0.0565 - val_mean_squared_error: 0.0565 - val_mean_absolute_error: 0.2018\n","Epoch 17/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0534 - mean_squared_error: 0.0534 - mean_absolute_error: 0.2076 - val_loss: 0.0532 - val_mean_squared_error: 0.0532 - val_mean_absolute_error: 0.1949\n","Epoch 18/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0498 - mean_squared_error: 0.0498 - mean_absolute_error: 0.2001 - val_loss: 0.0501 - val_mean_squared_error: 0.0501 - val_mean_absolute_error: 0.1882\n","Epoch 19/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0465 - mean_squared_error: 0.0465 - mean_absolute_error: 0.1929 - val_loss: 0.0472 - val_mean_squared_error: 0.0472 - val_mean_absolute_error: 0.1816\n","Epoch 20/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0435 - mean_squared_error: 0.0435 - mean_absolute_error: 0.1860 - val_loss: 0.0446 - val_mean_squared_error: 0.0446 - val_mean_absolute_error: 0.1753\n","Epoch 21/150\n","64/64 [==============================] - 0s 2ms/step - loss: 0.0407 - mean_squared_error: 0.0407 - mean_absolute_error: 0.1795 - val_loss: 0.0422 - val_mean_squared_error: 0.0422 - val_mean_absolute_error: 0.1691\n","Epoch 22/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0382 - mean_squared_error: 0.0382 - mean_absolute_error: 0.1734 - val_loss: 0.0399 - val_mean_squared_error: 0.0399 - val_mean_absolute_error: 0.1628\n","Epoch 23/150\n","64/64 [==============================] - 0s 2ms/step - loss: 0.0359 - mean_squared_error: 0.0359 - mean_absolute_error: 0.1676 - val_loss: 0.0380 - val_mean_squared_error: 0.0380 - val_mean_absolute_error: 0.1600\n","Epoch 24/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0339 - mean_squared_error: 0.0339 - mean_absolute_error: 0.1622 - val_loss: 0.0361 - val_mean_squared_error: 0.0361 - val_mean_absolute_error: 0.1587\n","Epoch 25/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0320 - mean_squared_error: 0.0320 - mean_absolute_error: 0.1574 - val_loss: 0.0346 - val_mean_squared_error: 0.0346 - val_mean_absolute_error: 0.1574\n","Epoch 26/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0303 - mean_squared_error: 0.0303 - mean_absolute_error: 0.1528 - val_loss: 0.0332 - val_mean_squared_error: 0.0332 - val_mean_absolute_error: 0.1562\n","Epoch 27/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0288 - mean_squared_error: 0.0288 - mean_absolute_error: 0.1485 - val_loss: 0.0318 - val_mean_squared_error: 0.0318 - val_mean_absolute_error: 0.1548\n","Epoch 28/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0274 - mean_squared_error: 0.0274 - mean_absolute_error: 0.1446 - val_loss: 0.0305 - val_mean_squared_error: 0.0305 - val_mean_absolute_error: 0.1535\n","Epoch 29/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0261 - mean_squared_error: 0.0261 - mean_absolute_error: 0.1408 - val_loss: 0.0295 - val_mean_squared_error: 0.0295 - val_mean_absolute_error: 0.1522\n","Epoch 30/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0250 - mean_squared_error: 0.0250 - mean_absolute_error: 0.1372 - val_loss: 0.0286 - val_mean_squared_error: 0.0286 - val_mean_absolute_error: 0.1509\n","Epoch 31/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0240 - mean_squared_error: 0.0240 - mean_absolute_error: 0.1340 - val_loss: 0.0277 - val_mean_squared_error: 0.0277 - val_mean_absolute_error: 0.1496\n","Epoch 32/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0231 - mean_squared_error: 0.0231 - mean_absolute_error: 0.1310 - val_loss: 0.0269 - val_mean_squared_error: 0.0269 - val_mean_absolute_error: 0.1483\n","Epoch 33/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0223 - mean_squared_error: 0.0223 - mean_absolute_error: 0.1285 - val_loss: 0.0262 - val_mean_squared_error: 0.0262 - val_mean_absolute_error: 0.1470\n","Epoch 34/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0216 - mean_squared_error: 0.0216 - mean_absolute_error: 0.1267 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1458\n","Epoch 35/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0209 - mean_squared_error: 0.0209 - mean_absolute_error: 0.1244 - val_loss: 0.0250 - val_mean_squared_error: 0.0250 - val_mean_absolute_error: 0.1446\n","Epoch 36/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0203 - mean_squared_error: 0.0203 - mean_absolute_error: 0.1228 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1433\n","Epoch 37/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0198 - mean_squared_error: 0.0198 - mean_absolute_error: 0.1208 - val_loss: 0.0240 - val_mean_squared_error: 0.0240 - val_mean_absolute_error: 0.1423\n","Epoch 38/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0193 - mean_squared_error: 0.0193 - mean_absolute_error: 0.1194 - val_loss: 0.0235 - val_mean_squared_error: 0.0235 - val_mean_absolute_error: 0.1411\n","Epoch 39/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0189 - mean_squared_error: 0.0189 - mean_absolute_error: 0.1176 - val_loss: 0.0232 - val_mean_squared_error: 0.0232 - val_mean_absolute_error: 0.1401\n","Epoch 40/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0185 - mean_squared_error: 0.0185 - mean_absolute_error: 0.1162 - val_loss: 0.0228 - val_mean_squared_error: 0.0228 - val_mean_absolute_error: 0.1390\n","Epoch 41/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0181 - mean_squared_error: 0.0181 - mean_absolute_error: 0.1152 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1379\n","Epoch 42/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0178 - mean_squared_error: 0.0178 - mean_absolute_error: 0.1138 - val_loss: 0.0222 - val_mean_squared_error: 0.0222 - val_mean_absolute_error: 0.1370\n","Epoch 43/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0175 - mean_squared_error: 0.0175 - mean_absolute_error: 0.1127 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1360\n","Epoch 44/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0172 - mean_squared_error: 0.0172 - mean_absolute_error: 0.1117 - val_loss: 0.0217 - val_mean_squared_error: 0.0217 - val_mean_absolute_error: 0.1351\n","Epoch 45/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0170 - mean_squared_error: 0.0170 - mean_absolute_error: 0.1108 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1342\n","Epoch 46/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0168 - mean_squared_error: 0.0168 - mean_absolute_error: 0.1098 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1334\n","Epoch 47/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.1089 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1325\n","Epoch 48/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0164 - mean_squared_error: 0.0164 - mean_absolute_error: 0.1080 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1315\n","Epoch 49/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.1072 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1309\n","Epoch 50/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0161 - mean_squared_error: 0.0161 - mean_absolute_error: 0.1065 - val_loss: 0.0207 - val_mean_squared_error: 0.0207 - val_mean_absolute_error: 0.1302\n","Epoch 51/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - mean_absolute_error: 0.1059 - val_loss: 0.0205 - val_mean_squared_error: 0.0205 - val_mean_absolute_error: 0.1293\n","Epoch 52/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.1052 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1286\n","Epoch 53/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - mean_absolute_error: 0.1045 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1279\n","Epoch 54/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - mean_absolute_error: 0.1039 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1272\n","Epoch 55/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - mean_absolute_error: 0.1034 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1267\n","Epoch 56/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - mean_absolute_error: 0.1027 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1260\n","Epoch 57/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.1023 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1255\n","Epoch 58/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.1017 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1251\n","Epoch 59/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - mean_absolute_error: 0.1013 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1248\n","Epoch 60/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.1008 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1245\n","Epoch 61/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.1003 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1242\n","Epoch 62/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0999 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1239\n","Epoch 63/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0996 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1236\n","Epoch 64/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0147 - mean_squared_error: 0.0147 - mean_absolute_error: 0.0992 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1233\n","Epoch 65/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0987 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1230\n","Epoch 66/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0984 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1227\n","Epoch 67/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0981 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1224\n","Epoch 68/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0977 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1221\n","Epoch 69/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0974 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1218\n","Epoch 70/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0970 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1216\n","Epoch 71/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0967 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1213\n","Epoch 72/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0966 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1210\n","Epoch 73/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0962 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1207\n","Epoch 74/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0958 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1204\n","Epoch 75/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0956 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1201\n","Epoch 76/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0953 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1198\n","Epoch 77/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0951 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1195\n","Epoch 78/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0949 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1192\n","Epoch 79/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0945 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1189\n","Epoch 80/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0943 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1186\n","Epoch 81/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - mean_absolute_error: 0.0941 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1183\n","Epoch 82/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - mean_absolute_error: 0.0937 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1179\n","Epoch 83/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0937 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1176\n","Epoch 84/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0934 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1173\n","Epoch 85/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0930 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1170\n","Epoch 86/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0928 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1167\n","Epoch 87/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0927 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1163\n","Epoch 88/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0926 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1160\n","Epoch 89/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0924 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1157\n","Epoch 90/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - mean_absolute_error: 0.0921 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1153\n","Epoch 91/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0916 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1150\n","Epoch 92/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0912 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.1146\n","Epoch 93/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0911 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.1143\n","Epoch 94/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0128 - mean_squared_error: 0.0128 - mean_absolute_error: 0.0909 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1139\n","Epoch 95/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0127 - mean_squared_error: 0.0127 - mean_absolute_error: 0.0908 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1135\n","Epoch 96/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0906 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1132\n","Epoch 97/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0902 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1128\n","Epoch 98/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0903 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.1124\n","Epoch 99/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0898 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.1121\n","Epoch 100/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0894 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.1117\n","Epoch 101/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0892 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.1113\n","Epoch 102/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0891 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.1109\n","Epoch 103/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0887 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.1105\n","Epoch 104/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0886 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.1101\n","Epoch 105/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0885 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.1097\n","Epoch 106/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0882 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.1093\n","Epoch 107/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0879 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1089\n","Epoch 108/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0878 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1084\n","Epoch 109/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0879 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.1080\n","Epoch 110/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0872 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1076\n","Epoch 111/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0869 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.1072\n","Epoch 112/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0869 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.1067\n","Epoch 113/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0867 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.1063\n","Epoch 114/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0861 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.1059\n","Epoch 115/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0861 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.1054\n","Epoch 116/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0858 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.1049\n","Epoch 117/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0855 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.1045\n","Epoch 118/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0854 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.1042\n","Epoch 119/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0859 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.1041\n","Epoch 120/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0848 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.1034\n","Epoch 121/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0847 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.1031\n","Epoch 122/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0841 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.1027\n","Epoch 123/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0839 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.1024\n","Epoch 124/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0838 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.1019\n","Epoch 125/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0834 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.1015\n","Epoch 126/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0833 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.1012\n","Epoch 127/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0828 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.1009\n","Epoch 128/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0824 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.1003\n","Epoch 129/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0820 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0998\n","Epoch 130/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0820 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0996\n","Epoch 131/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0815 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0992\n","Epoch 132/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0812 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0988\n","Epoch 133/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0808 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0983\n","Epoch 134/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0804 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0978\n","Epoch 135/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0802 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0975\n","Epoch 136/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0799 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0972\n","Epoch 137/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0797 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0968\n","Epoch 138/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0792 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0963\n","Epoch 139/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0789 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0957\n","Epoch 140/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0785 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0954\n","Epoch 141/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0782 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0949\n","Epoch 142/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0780 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0945\n","Epoch 143/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0776 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0941\n","Epoch 144/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0774 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0937\n","Epoch 145/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0768 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0932\n","Epoch 146/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0765 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0927\n","Epoch 147/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0760 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0922\n","Epoch 148/150\n","64/64 [==============================] - 0s 4ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0760 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0919\n","Epoch 149/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0757 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0915\n","Epoch 150/150\n","64/64 [==============================] - 0s 3ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0753 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0910\n"]}]},{"cell_type":"code","source":["def mod_plot_history_data(history_data, loss_plot, mse_plot, iteration, opt_title_pref=\"\"):\n","  # Check format of optional test data\n","\n","  # Gather data\n","  x_epochs = range(0, len(history_data[\"loss\"]))\n","\n","  # Plot loss\n","  loss_plot.plot(x_epochs, history_data[\"loss\"], label=f\"Train Loss Col.{iteration+4}\")\n","  #loss_plot.plot(x_epochs, history_data[\"val_loss\"], label=\"Validation Loss\")\n","\n","  # Plot accuracy\n","  mse_plot.plot(x_epochs, history_data[\"mean_squared_error\"], label=f\"Train MSE Col.{iteration+4}\")\n","  #mse_plot.plot(x_epochs, history_data[\"val_mean_squared_error\"], label=\"Validation MSE\")\n","\n","  # Label graph\n","  loss_plot.set_xlabel(\"epochs\")\n","  mse_plot.set_xlabel(\"epochs\")\n","  loss_plot.set_ylabel(\"Loss\")\n","  mse_plot.set_ylabel(\"Mean Squared Error\")\n","  loss_plot.set_title(f\"{opt_title_pref} Loss over {max(x_epochs) + 1} epochs\")\n","  mse_plot.set_title(f\"{opt_title_pref} Mean Squared Error over {max(x_epochs) + 1} epochs\")\n","  loss_plot.legend()\n","  mse_plot.legend()"],"metadata":{"id":"cFzwtTnFZI35"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def plot_all_history(hist_arr, prefix=\"\"):\n","  # Initialise graph\n","  fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(20,7))\n","\n","  for i, history in enumerate(hist_arr):\n","    mod_plot_history_data(history.history, axs[0], axs[1], i, prefix)"],"metadata":{"id":"znqPpL1DlWmz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#plot_all_history(rnn_history, \"RNN\")"],"metadata":{"id":"Ss7WaeZzZLhA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Evaluation"],"metadata":{"id":"FqH0Ah9q0ccy"}},{"cell_type":"code","source":["from sklearn.metrics import  mean_absolute_error, mean_squared_error, mean_absolute_percentage_error\n","def regression_report(y_pred, y_true):\n","  report = {}\n","  report[\"MAPE\"] = mean_absolute_percentage_error(y_pred, y_true)\n","  report[\"MAE\"] = mean_absolute_error(y_pred, y_true)\n","  report[\"RMSE\"] = mean_squared_error(y_pred, y_true, squared=False)\n","  return report"],"metadata":{"id":"PgvKJgv80j3f","executionInfo":{"status":"ok","timestamp":1652302132853,"user_tz":-60,"elapsed":11,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":["Get models predictions on test set"],"metadata":{"id":"wdxiqq9a0oSQ"}},{"cell_type":"code","source":["rnn_pred = []\n","\n","for model, x_test_i in zip(rnn_models, x_test):\n","  rnn_pred.append(model.predict(x_test_i))"],"metadata":{"id":"YboHAMsJ0nhV","executionInfo":{"status":"ok","timestamp":1652302138354,"user_tz":-60,"elapsed":5510,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"be2c76bf-1ff6-4c31-c3d3-80fa5686455c"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7f2d5e309290> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n","WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7f2d5e298ef0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]}]},{"cell_type":"code","source":["rnn_stats = {}\n","\n","report_keys = regression_report([1],[1]).keys()\n","for key in report_keys:\n","  rnn_stats[key] = []"],"metadata":{"id":"HOukuQ-oDz16","executionInfo":{"status":"ok","timestamp":1652302138355,"user_tz":-60,"elapsed":35,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}}},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":["Get report for RNN model"],"metadata":{"id":"sk650wh20nu-"}},{"cell_type":"code","source":["for i, (pred, true) in enumerate(zip(rnn_pred, y_test)):\n","  pred = np.reshape(pred, (true.shape))\n","  report = regression_report(pred, true)\n","\n","  for key in report_keys:\n","    rnn_stats[key].append(report[key])\n","   \n","  print(f\"Week {i+4}: {report}\")"],"metadata":{"id":"at4uLiPe0m2I","executionInfo":{"status":"ok","timestamp":1652302138357,"user_tz":-60,"elapsed":33,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"4f020eb2-d8a6-44f9-b574-f80970cc7357"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Week 4: {'MAPE': 0.7218354665925251, 'MAE': 0.3365940505587955, 'RMSE': 0.34765334551171134}\n","Week 5: {'MAPE': 0.7965397274458222, 'MAE': 0.4217248157260303, 'RMSE': 0.42507799751729214}\n","Week 6: {'MAPE': 0.8763677554571642, 'MAE': 0.4514532088452416, 'RMSE': 0.4540315305170369}\n","Week 7: {'MAPE': 0.9048310728644368, 'MAE': 0.43156920571549223, 'RMSE': 0.43284655360897367}\n","Week 8: {'MAPE': 0.930327519444163, 'MAE': 0.4744302365671164, 'RMSE': 0.47541632792057054}\n","Week 9: {'MAPE': 0.936924949239374, 'MAE': 0.4312828956269494, 'RMSE': 0.4331359891807615}\n","Week 10: {'MAPE': 0.9821493377450365, 'MAE': 0.5201305947120085, 'RMSE': 0.5207885898072864}\n","Week 11: {'MAPE': 0.974221493163904, 'MAE': 0.4522622572941475, 'RMSE': 0.4535886409240186}\n"]}]},{"cell_type":"markdown","source":["Find averages for each model"],"metadata":{"id":"ftzdORyn5F_x"}},{"cell_type":"code","source":["for rnn_key, rnn_values in rnn_stats.items():\n","  print(f\"Average {rnn_key}\")\n","  print(f\"RNN: {sum(rnn_values) / len(rnn_values)}\")\n","  print()"],"metadata":{"id":"FBigtvYd5Fiw","executionInfo":{"status":"ok","timestamp":1652302138359,"user_tz":-60,"elapsed":19,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"06925d01-6ece-43cf-ac43-1baa3ae4ec1e"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Average MAPE\n","RNN: 0.8903996652440533\n","\n","Average MAE\n","RNN: 0.43993090813072266\n","\n","Average RMSE\n","RNN: 0.4428173718734564\n","\n"]}]},{"cell_type":"markdown","source":["Plot stats"],"metadata":{"id":"DRZD-2AFFykp"}},{"cell_type":"code","source":["fig, axs = plt.subplots(nrows=len(report_keys), ncols=1, figsize=(10,10))\n","fig.tight_layout()\n","x_plot = range(4, 12)\n","\n","for i, key in enumerate(report_keys):\n","  axs[i].plot(x_plot, rnn_stats[key], label=\"RNN\")\n","  axs[i].set_title(f\"{key}\")\n","  axs[i].legend(loc=\"lower right\")"],"metadata":{"id":"muC8n_KuF0Qb","executionInfo":{"status":"ok","timestamp":1652302141267,"user_tz":-60,"elapsed":2921,"user":{"displayName":"Ben Hutchings","userId":"08068466303164555180"}},"colab":{"base_uri":"https://localhost:8080/","height":741},"outputId":"d21fc734-ab45-40ae-a3fa-97e48c19ad88"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 3 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}